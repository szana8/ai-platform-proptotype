services:

    # Postgres Service
    postgres:
        image: postgres:latest
        environment:
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_DATABASE}
        ports:
            - "5433:5432"
        volumes:
            - '~/.${APP_CONTAINER_NAME}/data/postgres:/var/lib/postgresql/data'
        networks:
            - app-network

    langflow:
        image: langflowai/langflow:1.4.0
        #pull_policy: always
        ports:
            - "7860:7860"
            - "9095:9090"
        depends_on:
            - postgres
        environment:
            - LANGFLOW_DATABASE_URL=postgresql://${DB_USERNAME}:${DB_PASSWORD}@postgres:5432/langflow
            - LANGFLOW_LOG_LEVEL=INFO
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        env_file:
            - ./.env
        volumes:
            - ./.langflow-data:/app/data
            - ./.chroma-db-data:/app/chromadb-data
            - ./.langflow-logs:/tmp/langflow-logs
        networks:
            - app-network

    vector-db:
        image: qdrant/qdrant:latest
        volumes:
        - ./.qdrant-data:/qdrant/storage
        ports:
            - "8100:6333"
            - "8101:6334"
        env_file:
            - ./.env
        environment:
            - QDRANT_ALLOW_CORS=true
        networks:
            - app-network

    prometheus:
        image: prom/prometheus:latest
        container_name: prometheus
        command:
            - "--config.file=/etc/prometheus/prometheus.yml"
        volumes:
            - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
            - ./.prometheus-data:/prometheus
        ports:
            - "9090:9090"   # Prometheus UI
        depends_on:
            - langflow
        networks:
            - app-network

    grafana:
        image: grafana/grafana-oss:latest
        container_name: grafana
        environment:
        - GF_SECURITY_ADMIN_USER=admin
        - GF_SECURITY_ADMIN_PASSWORD=admin
        ports:
        - "3001:3000"   # Grafana UI
        volumes:
            - ./.grafana-data:/var/lib/grafana
        depends_on:
            - prometheus
        networks:
            - app-network

#Docker Networks
networks:
    app-network:
        driver: bridge

#Volumes
volumes:
    dbdata:
        driver: local
    prometheus-data:
    grafana-storage: